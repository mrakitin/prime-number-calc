name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-linux-macos:
    strategy:
      matrix:
        include:
          - name: Ubuntu GCC
            runs-on: ubuntu-latest
            compiler: gcc
          - name: Ubuntu Clang
            runs-on: ubuntu-latest
            compiler: clang
          - name: macOS Clang
            runs-on: macos-latest
            compiler: clang

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.runs-on == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libgtest-dev

    - name: Install dependencies (macOS)
      if: matrix.runs-on == 'macos-latest'
      run: |
        brew install cmake googletest

    - name: Set up build environment
      run: |
        mkdir build
        cd build

    - name: Configure with CMake
      run: |
        cd build
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          export CC=clang
          export CXX=clang++
        fi
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: |
        cd build
        cmake --build . --parallel

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prime-calculator-${{ matrix.runs-on }}-${{ matrix.compiler }}
        path: |
          build/bin/prime_calculator*
        retention-days: 30

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prime-calculator-test-${{ matrix.runs-on }}-${{ matrix.compiler }}
        path: |
          build/bin/prime_calculator_test*
        retention-days: 30

  build-windows:
    name: Windows MSVC
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check Windows environment
      shell: powershell
      run: |
        Write-Host "=== Windows Environment Check ==="
        Write-Host "CMake version:"
        cmake --version
        Write-Host ""
        Write-Host "Available Visual Studio installations:"
        Get-ChildItem "C:\Program Files (x86)\Microsoft Visual Studio" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.Name }
        Write-Host ""
        Write-Host "Current directory: $(Get-Location)"
        Write-Host "Available tools:"
        Get-Command cmake, git, cl | ForEach-Object { Write-Host $_.Name }
        Write-Host "================================"

    - name: Install Google Test (Windows)
      shell: powershell
      run: |
        # Install vcpkg if not available
        if (-not (Test-Path "C:\vcpkg")) {
          Write-Host "Installing vcpkg..."
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
        } else {
          Write-Host "vcpkg already installed at C:\vcpkg"
        }
        
        Write-Host "Installing Google Test..."
        C:\vcpkg\vcpkg install googletest:x64-windows
        
        Write-Host "Integrating vcpkg..."
        C:\vcpkg\vcpkg integrate install
        
        Write-Host "Checking if Google Test is available..."
        if (Test-Path "C:\vcpkg\installed\x64-windows\include\gtest") {
          Write-Host "Google Test installed successfully"
        } else {
          Write-Host "Google Test installation failed"
          exit 1
        }

    - name: Set up build environment
      shell: powershell
      run: |
        mkdir build
        cd build

    - name: Configure with CMake
      shell: powershell
      run: |
        cd build
        # Use default generator which should work on Windows
        # Set the toolchain file path directly
        $toolchain = "C:\vcpkg\scripts\buildsystems\vcpkg.cmake"
        Write-Host "Using toolchain file: $toolchain"
        cmake .. -DCMAKE_TOOLCHAIN_FILE="$toolchain"

    - name: Build project
      shell: powershell
      run: |
        cd build
        cmake --build . --config Release

    - name: Run tests
      shell: powershell
      run: |
        cd build
        ctest --output-on-failure -C Release

    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prime-calculator-windows-latest-msvc
        path: |
          build/bin/Release/prime_calculator.exe
          build/bin/Release/prime_calculator_test.exe
          build/bin/Release/prime_calculator.exe
          build/bin/Release/prime_calculator_test.exe
        retention-days: 30

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prime-calculator-test-windows-latest-msvc
        path: |
          build/bin/Release/prime_calculator_test.exe
          build/bin/Release/prime_calculator_test.exe
        retention-days: 30

  build-summary:
    needs: [build-linux-macos, build-windows]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create build summary
      run: |
        echo "# 🚀 Prime Number Calculator - Build Summary" > build-summary.md
        echo "" >> build-summary.md
        echo "## ✅ Build Status" >> build-summary.md
        echo "" >> build-summary.md
        echo "All platforms built and tested successfully!" >> build-summary.md
        echo "" >> build-summary.md
        echo "## 🖥️ Supported Platforms" >> build-summary.md
        echo "" >> build-summary.md
        echo "- **Ubuntu** (GCC & Clang)" >> build-summary.md
        echo "- **macOS** (Clang)" >> build-summary.md
        echo "- **Windows** (MSVC)" >> build-summary.md
        echo "" >> build-summary.md
        echo "## 📦 Available Artifacts" >> build-summary.md
        echo "" >> build-summary.md
        echo "### Main Program" >> build-summary.md
        echo "- `prime-calculator-ubuntu-latest-gcc`" >> build-summary.md
        echo "- `prime-calculator-ubuntu-latest-clang`" >> build-summary.md
        echo "- `prime-calculator-macos-latest-clang`" >> build-summary.md
        echo "- `prime-calculator-windows-latest-msvc`" >> build-summary.md
        echo "" >> build-summary.md
        echo "### Test Suite" >> build-summary.md
        echo "- `prime-calculator-test-ubuntu-latest-gcc`" >> build-summary.md
        echo "- `prime-calculator-test-ubuntu-latest-clang`" >> build-summary.md
        echo "- `prime-calculator-test-macos-latest-clang`" >> build-summary.md
        echo "- `prime-calculator-test-windows-latest-msvc`" >> build-summary.md
        echo "" >> build-summary.md
        echo "## 🔧 Usage" >> build-summary.md
        echo "" >> build-summary.md
        echo "Download the appropriate artifact for your platform and run:" >> build-summary.md
        echo "```bash" >> build-summary.md
        echo "./prime_calculator <number>" >> build-summary.md
        echo "```" >> build-summary.md
        echo "" >> build-summary.md
        echo "## 📊 Test Results" >> build-summary.md
        echo "" >> build-summary.md
        echo "All tests passed on all platforms! 🎉" >> build-summary.md

    - name: Upload build summary
      uses: actions/upload-artifact@v4
      with:
        name: build-summary
        path: build-summary.md
        retention-days: 30
